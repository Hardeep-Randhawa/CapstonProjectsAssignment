# -*- coding: utf-8 -*-
"""Word2vec_model_to_find_the_embedding_of_the_given_word.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vPcZr0QsxSSZIMSliYeW5wuo3Bcl3eMQ
"""

import gensim.downloader as api

# Load the pre-trained GloVe model (50-dimensional vectors)
model = api.load("glove-wiki-gigaword-50")

# Example: Get the vector for a word

def find_word_embedding(word):
  if word in model.key_to_index:
    vector = model[word]
    print(f"Embedding for the word '{word}':\n{vector}")
  else:
    print(f"The word '{word}' is not in the vocabulary.")


def find_similar_words(word1, word2):
  similarity1 = model.similarity(word1, word2)
  #print final value
  print(similarity1)


def most_similar_words(word):
  # Find the most similar words to a given word
  similar_words = model.most_similar(word)
  print(f"Most similar words to '{similar_words}':")

def list_of_models():
  # List all available models
  print(api.info()['models'].keys())

if __name__ == "__main__":
  word = input("Enter a word to find its embedding: ")
  find_word_embedding(word)

  word1 = input("Enter a word to find its embedding: ")
  word2 = input("Enter a word to find its embedding: ")
  find_similar_words(word1, word2)

  word = input("Enter a word to find its embedding: ")
  most_similar_words(word)